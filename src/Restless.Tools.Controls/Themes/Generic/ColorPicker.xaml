<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:con="clr-namespace:Restless.Tools.Controls">

    <Geometry x:Key="DownArrowGeometry">M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z</Geometry>
    
    <SolidColorBrush x:Key="ButtonChecked" Color="#FF82BFFF"/>
    <SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF"/>
    <SolidColorBrush x:Key="ButtonCheckedBorder" Color="#FF1D73C9"/>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="ToggleButtonBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="ToggleButtonBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <DrawingBrush  x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{TemplateBinding Height}"/>
                        </Grid.RowDefinitions>

                        <Border
                            SnapsToDevicePixels="True"
                            BorderBrush="{StaticResource ToggleButtonBorderBrush}"
                            BorderThickness="1,1,0,1"
                            Background="{StaticResource CheckerBrush}"
                            Padding="0">
                            <Border Background="{TemplateBinding Background}" Margin="0" Padding="0"/>
                        </Border>

                        <Border
                            x:Name="Button"
                            Grid.Column="1"
                            BorderBrush="{StaticResource ToggleButtonBorderBrush}"
                            Background="{StaticResource ToggleButtonBackgroundBrush}"
                            BorderThickness="1"
                            Margin="0"
                            CornerRadius="0,2.5,2.5,0">
                            <Grid IsHitTestVisible="False" Grid.Column="1" Margin="5">
                                <Path
                                    x:Name="Arrow"
                                    Width="9"
                                    Height="5"
                                    Data="{StaticResource DownArrowGeometry}"
                                    Fill="#FF000000"
                                    Margin="0,1,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Button" Value="{StaticResource ButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="Button" Value="{StaticResource ButtonHoverBorder}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Button" Value="{StaticResource ButtonChecked}" />
                            <Setter Property="BorderBrush" TargetName="Button" Value="{StaticResource ButtonCheckedBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid"
                     ToolTip="{Binding Name}">
                        <Grid.Resources>
                            <Style TargetType="ToolTip">
                                <Style.Triggers>
                                    <Trigger Property="Content"  Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="1" Background="Transparent" BorderBrush="Transparent" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border Background="{StaticResource CheckerBrush}" BorderBrush="Black" BorderThickness="1" Margin="2" >
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding Color, Converter={con:ColorToBrushConverter}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorListStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="500" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="200" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style TargetType="{x:Type con:RestlessColorPicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:RestlessColorPicker">
                    <Grid>
                        <ToggleButton
                            x:Name="PART_ColorPickerToggleButton"
                            Grid.Column="1"
                            Style="{StaticResource ColorPickerToggleButtonStyle}"
                            BorderBrush="LightGray"
                            Background="{Binding SelectedColor, RelativeSource={RelativeSource AncestorType=con:RestlessColorPicker},Converter={con:ColorToBrushConverter}}" />

                        <Popup
                            x:Name="PART_ColorPickerPalettePopup"
                            Grid.Column="1"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            PlacementTarget="{Binding ElementName=PART_ColorPickerToggleButton}"
                            IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked, Mode=OneWay}"
                            StaysOpen="False"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            VerticalOffset="1"
                            PopupAnimation="Slide"
                            ToolTip="">

                            <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}" Padding="5">
                                <StackPanel Margin="0">
                                    <TextBlock Text="Available Colors"/>
                                    <ListBox
                                        x:Name="PART_AvailableColors"
                                        ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource AncestorType=con:RestlessColorPicker}}"
                                        Style="{StaticResource ColorListStyle}" />
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>